/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/*
 *  west build -b rekdactyl -- -DSHIELD=rekdactyl_left -DZMK_CONFIG="/Users/rishi/Documents/GitHub/zmk-config/config"
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define QWERTY 0
#define COLEMAK 1
#define LOWER 2
#define RAISE 3
#define SYS 4
#define MEDIA 5
#define TRI 6

/ {
        behaviors {
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <180>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
        };
        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                    if-layers = <LOWER RAISE>;
                    then-layer = <TRI>;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp Q         &kp W      &kp E         &kp R         &kp T            &kp Y         &kp U      &kp I          &kp O      &kp P 
   &hm LCTRL A   &kp S      &hm LGUI D    &kp F         &kp G            &kp H         &kp J      &hm RGUI K     &kp L      &hm RCTRL SCLN
   &hm LALT Z    &kp X      &kp C         &kp V         &kp B            &kp N         &kp M      &kp CMMA       &kp DOT    &hm RALT FSLH
                 &mo MEDIA  &lt MEDIA ESC &hm LSFT SPC  &lt LOWER TAB    &lt RAISE BKSP &hm RSFT RET  &mo SYS &kp DEL
                        >;
                };
                
                colemak_layer {
                        bindings = <
   &kp Q         &kp W      &kp F        &kp P         &kp G            &kp J         &kp L      &kp U          &kp Y      &kp SCLN 
   &hm LCTRL A   &kp R      &hm LGUI S   &kp T         &kp D            &kp H         &kp N      &hm RGUI E     &kp I      &hm RCTRL O
   &hm LALT Z    &kp X      &kp C        &kp V         &kp B            &kp K         &kp M      &kp CMMA       &kp DOT    &hm RALT FSLH
                 &mo MEDIA  &lt MEDIA ESC &hm LSFT SPC  &lt LOWER TAB    &lt RAISE BKSP &hm RSFT RET  &mo SYS &kp DEL
                        >;
                };

                lower_layer {
                        bindings = <
   &kp F19       &kp DQT    &kp LPAR     &kp RPAR      &kp AT           &trans        &kp N7     &kp N8         &kp N9     &none
   &kp LS(P)     &kp SQT    &kp LBKT     &kp RBKT      &kp UNDER        &kp STAR      &kp N4     &kp N5         &kp N6     &kp RET
   &kp QMARK     &kp DLLR   &kp LBRC     &kp RBRC      &kp HASH         &kp FSLH      &kp N1     &kp N2         &kp N3     &kp RET
                 &trans     &trans       &trans        &trans           &kp DEL       &kp N0     &kp DOT        &trans
                        >;
                };
                
                raise_layer {
                        bindings = <
   &kp BSLH      &kp EXCL   &kp TILDE    &kp AMPS      &kp GRAVE        &kp HOME      &kp PG_DN  &kp PG_UP      &kp END    &trans
   &hm LGUI FSLH &kp MINUS  &hm LCTRL EQL &kp PLUS      &kp STAR         &kp LEFT      &kp DOWN   &kp UP         &kp RIGHT  &trans
   &hm LALT PRCT &kp LT     &kp PIPE     &kp GT        &kp CRRT         &trans        &trans     &trans         &trans     &trans
                            &trans  &lt LOWER LG(GRAVE) &trans &trans       &trans        &trans     &kp LC(MINUS) &kp LC(EQL)
                        >;
                };

                sys_layer {
                        bindings = <
   &trans        &trans     &trans       &tog QWERTY   &tog COLEMAK     &kp LC(LS(N3)) &kp F7     &kp F8         &kp F9     &kp F12    
   &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4     &kp LC(LS(N4)) &kp F4     &kp F5         &kp F6     &kp F11
   &bt BT_CLR    &trans     &out OUT_USB &out OUT_BLE  &trans           &trans         &kp F1     &kp F2         &kp F3     &kp F10
                            &trans       &trans       &trans  &trans         &trans        &trans     &trans        &trans
                        >;
                };

                media_layer {
                        bindings = <
   &kp F19       &kp F20    &kp F21      &kp F24       &kp LC(LS(N4))   &none &kp LS(F19)   &kp LS(F20) &kp LS(F21)    &kp LS(F24) 
   &kp RET       &kp F17    &kp F18      &kp F23       &kp LC(LS(N3))   &none &kp LS(F16)   &kp LS(F17) &kp LS(F18)    &kp LS(F23) 
   &kp BKSP      &kp LG(Z)  &kp F15      &kp F22       &trans           &none &kp LS(F13)   &kp LS(F14) &kp LS(F15)    &kp LS(F22) 
                            &trans       &trans       &trans  &trans         &trans        &trans     &trans        &trans
                        >;
                };

                tri_layer {
                        bindings = <
   &kp F19       &kp F20       &kp F21       &kp F24       &kp LS(LC(N4))     &none         &kp LS(F19)   &kp LS(F20)   &kp LS(F21)   &kp LS(F24)
   &kp F16       &kp F17       &kp F18       &kp F23       &kp LS(LC(N3))     &none         &kp LS(F16)   &kp LS(F17)   &kp LS(F18)   &kp LS(F23)
   &kp F13       &kp F14       &kp F15       &kp F22       &none              &none         &kp LS(F13)   &kp LS(F14)   &kp LS(F15)   &kp LS(F22)
                            &none         &none         &none  &none             &none         &none         &none         &none
                        >;
                };
            };

};
